{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/index.ts"],"names":[],"mappings":"AACA,IAAM,UAAU,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAQjD,MAAM,sBACJ,OAA4B;IAE5B,MAAM,CAAC,gBAAgB,KAAK,EAAE,MAAM;QAClC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QAEpB,UAAU,CAAC,KAAK,CAAC,CAAC;QAElB,yDAAyD;QACzD,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC;QAED,IAAM,SAAS,GAAG,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEzC,UAAU,CAAC,SAAS,CAAC,CAAC;QAEtB,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { ActionReducer, Action } from '@ngrx/store';\nconst deepFreeze = require('deep-freeze-strict');\n\n/**\n * Meta-reducer that prevents state from being mutated anywhere in the app.\n */\nexport function storeFreeze<T, V extends Action = Action>(\n  reducer: ActionReducer<T, V>\n): ActionReducer<T, V>;\nexport function storeFreeze<T, V extends Action = Action>(\n  reducer: ActionReducer<T, V>\n): ActionReducer<any, any> {\n  return function freeze(state, action): any {\n    state = state || {};\n\n    deepFreeze(state);\n\n    // guard against trying to freeze null or undefined types\n    if (action.payload) {\n      deepFreeze(action.payload);\n    }\n\n    const nextState = reducer(state, action);\n\n    deepFreeze(nextState);\n\n    return nextState;\n  };\n}\n"]}